name: Deploy Lambda Container Image

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      #OIDC/IRSA Authentication - No more access keys!
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
         role-to-assume: "arn:aws:iam::445830509416:oidc-provider/token.actions.githubusercontent.com"
         role-session-name: GitHubActions-Backend-${{ github.run_id }}
         aws-region: "us-east-1"

      # - name: Configure AWS Credentials  
      #   uses: aws-actions/configure-aws-credentials@v5.0.0  
      #   with:  
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
      #     aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t hello-lambda .
          docker tag hello-lambda:latest ${{ steps.login-ecr.outputs.registry }}/hello-lambda:latest

      - name: push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/hello-lambda:latest
      
      - name: Create Lambda Function
        run: |
          aws lambda create-function \
            --function-name hello-lambda \
            --package-type Image \
            --code ImageUri=${{ steps.login-ecr.outputs.registry }}/hello-lambda:latest \
            --role arn:aws:iam::445830509416:role/lambda-execution-role \
            --region us-east-1

      - name: Create API Gateway
        run: |
          API_ID=$(aws apigatewayv2 create-api \
            --name hello-api \
            --protocol-type HTTP \
            --target arn:aws:lambda:us-east-1:445830509416:function:hello-lambda \
            --query 'ApiId' --output text)

          aws lambda add-permission \
            --function-name hello-lambda \
            --statement-id apigateway-access \
            --action lambda:InvokeFunction \
            --principal apigateway.amazonaws.com \
            --source-arn arn:aws:execute-api:us-east-1:445830509416:${API_ID}/*/*/hello

          INTEGRATION_ID=$(aws apigatewayv2 create-integration \
            --api-id $API_ID \
            --integration-type AWS_PROXY \
            --integration-uri arn:aws:lambda:us-east-1:445830509416:function:hello-lambda \
            --payload-format-version 2.0 \
            --query 'IntegrationId' --output text)

          aws apigatewayv2 create-route \
            --api-id $API_ID \
            --route-key "GET /hello" \
            --target integrations/$INTEGRATION_ID

          aws apigatewayv2 create-deployment \
            --api-id $API_ID

          echo "API Gateway endpoint: https://${API_ID}.execute-api.us-east-1.amazonaws.com/hello"


